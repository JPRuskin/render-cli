/* tslint:disable */
/* eslint-disable */
/**
 * Render Public API
 * Manage everything about your Render services
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@render.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
import type { Region } from './Region.ts';
import {
    RegionFromJSON,
    RegionFromJSONTyped,
    RegionToJSON,
} from './Region.ts';
import type { ServiceEnv } from './ServiceEnv.ts';
import {
    ServiceEnvFromJSON,
    ServiceEnvFromJSONTyped,
    ServiceEnvToJSON,
} from './ServiceEnv.ts';
import type { WebServiceDetailsPOSTDisk } from './WebServiceDetailsPOSTDisk.ts';
import {
    WebServiceDetailsPOSTDiskFromJSON,
    WebServiceDetailsPOSTDiskFromJSONTyped,
    WebServiceDetailsPOSTDiskToJSON,
} from './WebServiceDetailsPOSTDisk.ts';
import type { WebServiceDetailsPOSTEnvSpecificDetails } from './WebServiceDetailsPOSTEnvSpecificDetails.ts';
import {
    WebServiceDetailsPOSTEnvSpecificDetailsFromJSON,
    WebServiceDetailsPOSTEnvSpecificDetailsFromJSONTyped,
    WebServiceDetailsPOSTEnvSpecificDetailsToJSON,
} from './WebServiceDetailsPOSTEnvSpecificDetails.ts';

/**
 * 
 * @export
 * @interface PrivateServiceDetailsPOST
 */
export interface PrivateServiceDetailsPOST {
    /**
     * 
     * @type {WebServiceDetailsPOSTDisk}
     * @memberof PrivateServiceDetailsPOST
     */
    disk?: WebServiceDetailsPOSTDisk;
    /**
     * 
     * @type {ServiceEnv}
     * @memberof PrivateServiceDetailsPOST
     */
    env: ServiceEnv;
    /**
     * 
     * @type {WebServiceDetailsPOSTEnvSpecificDetails}
     * @memberof PrivateServiceDetailsPOST
     */
    envSpecificDetails?: WebServiceDetailsPOSTEnvSpecificDetails;
    /**
     * Defaults to 1
     * @type {number}
     * @memberof PrivateServiceDetailsPOST
     */
    numInstances?: number;
    /**
     * Defaults to "starter"
     * @type {string}
     * @memberof PrivateServiceDetailsPOST
     */
    plan?: PrivateServiceDetailsPOSTPlanEnum;
    /**
     * Defaults to "no"
     * @type {string}
     * @memberof PrivateServiceDetailsPOST
     */
    pullRequestPreviewsEnabled?: PrivateServiceDetailsPOSTPullRequestPreviewsEnabledEnum;
    /**
     * 
     * @type {Region}
     * @memberof PrivateServiceDetailsPOST
     */
    region?: Region;
}


/**
 * @export
 */
export const PrivateServiceDetailsPOSTPlanEnum = {
    STARTER: 'starter',
    STARTER_PLUS: 'starter_plus',
    STANDARD: 'standard',
    STANDARD_PLUS: 'standard_plus',
    PRO: 'pro',
    PRO_PLUS: 'pro_plus',
    PRO_MAX: 'pro_max',
    PRO_ULTRA: 'pro_ultra',
    UNKNOWN_DEFAULT_OPEN_API: '11184809'
} as const;
export type PrivateServiceDetailsPOSTPlanEnum = typeof PrivateServiceDetailsPOSTPlanEnum[keyof typeof PrivateServiceDetailsPOSTPlanEnum];

/**
 * @export
 */
export const PrivateServiceDetailsPOSTPullRequestPreviewsEnabledEnum = {
    TRUE: 'true',
    FALSE: 'false',
    UNKNOWN_DEFAULT_OPEN_API: '11184809'
} as const;
export type PrivateServiceDetailsPOSTPullRequestPreviewsEnabledEnum = typeof PrivateServiceDetailsPOSTPullRequestPreviewsEnabledEnum[keyof typeof PrivateServiceDetailsPOSTPullRequestPreviewsEnabledEnum];


/**
 * Check if a given object implements the PrivateServiceDetailsPOST interface.
 */
export function instanceOfPrivateServiceDetailsPOST(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "env" in value;

    return isInstance;
}

export function PrivateServiceDetailsPOSTFromJSON(json: any): PrivateServiceDetailsPOST {
    return PrivateServiceDetailsPOSTFromJSONTyped(json, false);
}

export function PrivateServiceDetailsPOSTFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrivateServiceDetailsPOST {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'disk': !exists(json, 'disk') ? undefined : WebServiceDetailsPOSTDiskFromJSON(json['disk']),
        'env': ServiceEnvFromJSON(json['env']),
        'envSpecificDetails': !exists(json, 'envSpecificDetails') ? undefined : WebServiceDetailsPOSTEnvSpecificDetailsFromJSON(json['envSpecificDetails']),
        'numInstances': !exists(json, 'numInstances') ? undefined : json['numInstances'],
        'plan': !exists(json, 'plan') ? undefined : json['plan'],
        'pullRequestPreviewsEnabled': !exists(json, 'pullRequestPreviewsEnabled') ? undefined : json['pullRequestPreviewsEnabled'],
        'region': !exists(json, 'region') ? undefined : RegionFromJSON(json['region']),
    };
}

export function PrivateServiceDetailsPOSTToJSON(value?: PrivateServiceDetailsPOST | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'disk': WebServiceDetailsPOSTDiskToJSON(value.disk),
        'env': ServiceEnvToJSON(value.env),
        'envSpecificDetails': WebServiceDetailsPOSTEnvSpecificDetailsToJSON(value.envSpecificDetails),
        'numInstances': value.numInstances,
        'plan': value.plan,
        'pullRequestPreviewsEnabled': value.pullRequestPreviewsEnabled,
        'region': RegionToJSON(value.region),
    };
}

